// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sstable/index.proto

package sstable

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IndexBlock struct {
	BlockOffsets         []*BlockOffset `protobuf:"bytes,1,rep,name=BlockOffsets,proto3" json:"BlockOffsets,omitempty"`
	Filter               []byte         `protobuf:"bytes,2,opt,name=Filter,proto3" json:"Filter,omitempty"`
	KeyCount             uint32         `protobuf:"varint,3,opt,name=KeyCount,proto3" json:"KeyCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *IndexBlock) Reset()         { *m = IndexBlock{} }
func (m *IndexBlock) String() string { return proto.CompactTextString(m) }
func (*IndexBlock) ProtoMessage()    {}
func (*IndexBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_4288c13f5d277049, []int{0}
}

func (m *IndexBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexBlock.Unmarshal(m, b)
}
func (m *IndexBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexBlock.Marshal(b, m, deterministic)
}
func (m *IndexBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexBlock.Merge(m, src)
}
func (m *IndexBlock) XXX_Size() int {
	return xxx_messageInfo_IndexBlock.Size(m)
}
func (m *IndexBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexBlock.DiscardUnknown(m)
}

var xxx_messageInfo_IndexBlock proto.InternalMessageInfo

func (m *IndexBlock) GetBlockOffsets() []*BlockOffset {
	if m != nil {
		return m.BlockOffsets
	}
	return nil
}

func (m *IndexBlock) GetFilter() []byte {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *IndexBlock) GetKeyCount() uint32 {
	if m != nil {
		return m.KeyCount
	}
	return 0
}

type BlockOffset struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Offset               uint32   `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Len                  uint32   `protobuf:"varint,3,opt,name=Len,proto3" json:"Len,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockOffset) Reset()         { *m = BlockOffset{} }
func (m *BlockOffset) String() string { return proto.CompactTextString(m) }
func (*BlockOffset) ProtoMessage()    {}
func (*BlockOffset) Descriptor() ([]byte, []int) {
	return fileDescriptor_4288c13f5d277049, []int{1}
}

func (m *BlockOffset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockOffset.Unmarshal(m, b)
}
func (m *BlockOffset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockOffset.Marshal(b, m, deterministic)
}
func (m *BlockOffset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockOffset.Merge(m, src)
}
func (m *BlockOffset) XXX_Size() int {
	return xxx_messageInfo_BlockOffset.Size(m)
}
func (m *BlockOffset) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockOffset.DiscardUnknown(m)
}

var xxx_messageInfo_BlockOffset proto.InternalMessageInfo

func (m *BlockOffset) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *BlockOffset) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *BlockOffset) GetLen() uint32 {
	if m != nil {
		return m.Len
	}
	return 0
}

func init() {
	proto.RegisterType((*IndexBlock)(nil), "sstable.IndexBlock")
	proto.RegisterType((*BlockOffset)(nil), "sstable.BlockOffset")
}

func init() { proto.RegisterFile("sstable/index.proto", fileDescriptor_4288c13f5d277049) }

var fileDescriptor_4288c13f5d277049 = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x2e, 0x2e, 0x49,
	0x4c, 0xca, 0x49, 0xd5, 0xcf, 0xcc, 0x4b, 0x49, 0xad, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x87, 0x0a, 0x2a, 0x55, 0x71, 0x71, 0x79, 0x82, 0xc4, 0x9d, 0x72, 0xf2, 0x93, 0xb3, 0x85,
	0x2c, 0xb8, 0x78, 0xc0, 0x0c, 0xff, 0xb4, 0xb4, 0xe2, 0xd4, 0x92, 0x62, 0x09, 0x46, 0x05, 0x66,
	0x0d, 0x6e, 0x23, 0x11, 0x3d, 0xa8, 0x6a, 0x3d, 0x24, 0xc9, 0x20, 0x14, 0x95, 0x42, 0x62, 0x5c,
	0x6c, 0x6e, 0x99, 0x39, 0x25, 0xa9, 0x45, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x3c, 0x41, 0x50, 0x9e,
	0x90, 0x14, 0x17, 0x87, 0x77, 0x6a, 0xa5, 0x73, 0x7e, 0x69, 0x5e, 0x89, 0x04, 0xb3, 0x02, 0xa3,
	0x06, 0x6f, 0x10, 0x9c, 0xaf, 0xe4, 0xc9, 0xc5, 0x8d, 0x64, 0x86, 0x90, 0x00, 0x17, 0xb3, 0x77,
	0x6a, 0xa5, 0x04, 0x23, 0x58, 0x3f, 0x88, 0x09, 0x32, 0x14, 0x22, 0x07, 0x36, 0x94, 0x37, 0x88,
	0x0d, 0xa1, 0xd2, 0x27, 0x35, 0x0f, 0x6a, 0x1e, 0x88, 0x99, 0xc4, 0x06, 0xf6, 0x96, 0x31, 0x20,
	0x00, 0x00, 0xff, 0xff, 0x7d, 0xb5, 0x5d, 0x4f, 0xed, 0x00, 0x00, 0x00,
}
